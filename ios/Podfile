require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'
require_relative '../node_modules/react-native-permissions/scripts/setup'

$FirebaseSDKVersion = '10.19.0'


platform :ios, '15.1'
install! 'cocoapods', :deterministic_uuids => false
setup_permissions([
  'AppTrackingTransparency',
  'Bluetooth',
  'Calendars',
  'CalendarsWriteOnly',
  'Camera',
  'Contacts',
  'FaceID',
  'LocationAccuracy',
  'LocationAlways',
  'LocationWhenInUse',
  'MediaLibrary',
  'Microphone',
  'Motion',
  'Notifications',
  'PhotoLibrary',
  'PhotoLibraryAddOnly',
  'Reminders',
  'Siri',
  'SpeechRecognition',
  'StoreKit',
])

target 'Plem' do
  config = use_native_modules!

  # Flags change depending on the env values.
  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    # Hermes is now enabled by default. Disable by setting this flag to false.
    # Upcoming versions of React Native may rely on get_default_flags(), but
    # we make it explicit here to aid in the React Native upgrade process.
    :hermes_enabled => true,
    :fabric_enabled => flags[:fabric_enabled],
    # Enables Flipper.
    #
    # Note that if you have use_frameworks! enabled, Flipper will not work and
    # you should disable the next line.
    # :flipper_configuration => FlipperConfiguration.enabled,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  pod 'FirebaseAnalytics', $FirebaseSDKVersion, :modular_headers => true
  pod 'Firebase/Messaging', $FirebaseSDKVersion, :modular_headers => true
  pod 'FirebaseCore', $FirebaseSDKVersion, :modular_headers => true
  # pod 'React', :path => '../node_modules/react-native/', :modular_headers => true
  # pod 'React-Core', :path => '../node_modules/react-native/React', :modular_headers => true
  # pod 'React-RCTText', :path => '../node_modules/react-native/Libraries/Text'
  # pod 'React-RCTImage', :path => '../node_modules/react-native/Libraries/Image'
  # pod 'React-RCTNetwork', :path => '../node_modules/react-native/Libraries/Network'
  # pod 'React-RCTWebSocket', :path => '../node_modules/react-native/Libraries/WebSocket'

  pod 'GoogleUtilities', :modular_headers => true

  target 'ExampleExtension' do
    inherit! :search_paths
    # React Native 모듈을 여기에도 포함
    # pod 'React', :path => '../node_modules/react-native/', :modular_headers => true
    # pod  'React-Core', :path => '../node_modules/react-native/React'
    # pod 'React-RCTText', :path => '../node_modules/react-native/Libraries/Text'
    # pod 'React-RCTImage', :path => '../node_modules/react-native/Libraries/Image'
    # pod 'React-RCTNetwork', :path => '../node_modules/react-native/Libraries/Network'
    # pod 'React-RCTWebSocket', :path => '../node_modules/react-native/Libraries/WebSocket'
  end

  target 'PlemTests' do
    inherit! :complete
    # Pods for testing
  end

  post_install do |installer|
    react_native_post_install(
      installer,
      :mac_catalyst_enabled => false
    )
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['APPLICATION_EXTENSION_API_ONLY'] = 'No'
      end
    end
  end
end
